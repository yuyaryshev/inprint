{
    "name": "inprint",
    "version": "1.3.2",
    "keywords": [
        "generator",
        "precompiler",
        "inprint",
        "inprinter"
    ],
    "description": "A very simple precompiler written in typescript. With it you can make a dynamically generated blocks in your code.",
    "author": "Yuri Yaryshev",
    "main": "lib/cjs/index.js",
    "module": "lib/esm/index.js",
    "exports": {
        ".": {
            "import": "./lib/esm/index.js",
            "require": "./lib/cjs/index.js"
        }
    },
    "typings": "lib/types/index.d.ts",
    "homepage": "https://github.com/yuyaryshev/inprint",
    "repository": {
        "type": "git",
        "url": "https://github.com/yuyaryshev/inprint"
    },
    "license": "Unlicense",
    "publishConfig": {
        "registry": "http://registry.npmjs.org"
    },
    "jest": {
        "rootDir": "src",
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "preset": "ts-jest",
        "resolver": "jest-ts-webcompat-resolver"
    },
    "scripts": {
        "test": "jest --config=jest.config-ts.cjs --passWithNoTests",
        "build": "npm run precompile_full && npm run clean && npm run build:esm && npm run build:cjs && npm run build:types && npm run lint && npm run test && npm run build:docs",
        "tsc": "npm run build:ts",
        "republish": "npm run build && npx version-select && yb genprojmeta && npm publish",
        "precompile": "yb precompile && eslint src --fix --quiet",
        "precompile_full": "npm run precompile && prettier src --write",
        "clean:cjs": "yb clean_cjs",
        "build:cjs": "npm run clean:cjs && babel src --config-file ./babel.cjs.config.cjs --out-dir lib/cjs --extensions \".ts,.tsx,.js,.jsx\" --source-maps ",
        "watch:cjs": "npm run clean:cjs && title inprint - watch:cjs & babel src --config-file ./babel.cjs.config.cjs --out-dir lib/cjs --extensions \".ts,.tsx,.js,.jsx\" --source-maps -w",
        "clean:esm": "yb clean_esm",
        "build:esm": "npm run clean:esm && babel src --config-file ./babel.esm.config.cjs --out-dir lib/esm --extensions \".ts,.tsx,.js,.jsx\" --source-maps ",
        "watch:esm": "npm run clean:esm && babel src --config-file ./babel.esm.config.cjs --out-dir lib/esm --extensions \".ts,.tsx,.js,.jsx\" --source-maps -w",
        "clean:types": "yb clean_types",
        "build:types": "npm run clean:types && tsc -p tsconfig-declarations.json",
        "watch:types": "npm run clean:types && title inprint - watch:types & tsc -p tsconfig-declarations.json -w",
        "clear:docs": "yb clean_docs",
        "build:docs": "api-extractor run --local && api-documenter markdown --input-folder temp --output-folder docs",
        "clean:ts": "yb clean_ts",
        "build:ts": "npm run clean:ts && tsc",
        "lint": "npx eslint . --ext .js,.jsx,.ts,.tsx",
        "deps": "echo Finding loops in .js requires... & del deps.png & madge dist -c -i deps.png && deps.png",
        "deps_all": "echo Generating full .js requires tree... & del deps.png & madge dist -i deps.png && deps.png",
        "deps_orphans": "echo Finding orphans .js requires... & del deps.png & madge dist --orphans -i deps.png && deps.png",
        "clean": "yb clean_all && npm run clear:docs",
        "watch:test:cjs": "npm run build:cjs && jest --config=jest.config-cjs.cjs --passWithNoTests -w",
        "test:cjs": "npm run build:cjs && jest --config=jest.config-cjs.cjs --passWithNoTests",
        "test:ts": "jest --config=jest.config-ts.cjs --passWithNoTests",
        "start": "node lib/cjs/start.js",
        "clean:frontend": "echo no front-end",
        "build:frontend": "echo no front-end",
        "watch:frontend": "echo no front-end",
        "build_lite": "npm run precompile && npm run clean && npm run build:cjs && npm run build:types",
        "republish_forced": "npm run build_lite && npx version-select && yb genprojmeta && npm publish",
        "watch:test:cjs_mocha": "mocha './lib/cjs/**/*.test.js' -w",
        "watch:test:cjs_jest": "jest --config=jest.config-cjs.cjs --passWithNoTests -w",
        "test:cjs_jest": "npm run build:cjs && jest --config=jest.config-cjs.cjs --passWithNoTests",
        "test:cjs_mocha": "npm run build:cjs && mocha './lib/cjs/**/*.test.js'"
    },
    "devDependencies": {
        "@babel/cli": "7.15.7",
        "@babel/core": "7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/parser": "7.15.7",
        "@babel/plugin-proposal-class-properties": "^7.14.5",
        "@babel/plugin-proposal-decorators": "^7.15.4",
        "@babel/plugin-proposal-object-rest-spread": "^7.15.6",
        "@babel/plugin-proposal-optional-chaining": "7.14.5",
        "@babel/plugin-transform-modules-commonjs": "^7.15.4",
        "@babel/plugin-transform-typescript": "^7.15.4",
        "babel-loader": "^8.2.2",
        "babel-plugin-inline-replace-variables": "^1.3.1",
        "babel-plugin-module-resolver": "^4.1.0",
        "babel-watch": "^7.5.0",
        "jest": "^27.2.4",
        "prettier": "^2.4.1",
        "typescript": "^4.4.3",
        "@microsoft/api-documenter": "^7.13.58",
        "@microsoft/api-extractor": "^7.18.13",
        "sinon": "^11.1.2",
        "@types/sinon": "^10.0.4",
        "@typescript-eslint/eslint-plugin": "^4.33.0",
        "@typescript-eslint/parser": "^4.33.0",
        "eslint": "^7.32.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-import": "^2.24.2",
        "eslint-plugin-jsdoc": "^36.1.0",
        "eslint-plugin-sonarjs": "^0.10.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "javascript-stringify": "^2.1.0",
        "ts-jest": "^27.0.5",
        "jest-ts-webcompat-resolver": "^1.0.0",
        "json5": "^2.2.0",
        "pretty-quick": "^3.1.1",
        "tslib": "^2.3.1",
        "cross-env": "^7.0.3",
        "modify-filepath": "*",
        "@types/chai": "^4.2.22",
        "chai": "^4.3.4",
        "mocha": "^9.1.2",
        "yyabuilder": "^2.3.1",
        "source-map-support": "^0.5.20",
        "@babel/preset-typescript": "^7.15.0",
        "@types/mocha": "^9.0.0",
        "eslint-plugin-react-hooks": "^4.2.0",
        "@babel/preset-react": "^7.14.5"
    },
    "peerDependencies": {
        "prettier": "2.3.1"
    },
    "dependencies": {
        "globby": "^11.0.4",
        "json5": "^2.2.0"
    },
    "private": false,
    "bin": {
        "inprint": "./bin/index.js"
    },
    "files": [
        ".gitignore",
        "package.json",
        "LICENSE",
        "bin/**/*.js",
        "lib/**/*.js",
        "readme.md"
    ],
    "plainDependencies": true,
    "prettier": {
        "tabWidth": 4,
        "printWidth": 120,
        "trailingComma": "es5"
    },
    "husky": {
        "hooks": {
            "pre-commit": "pretty-quick --staged"
        }
    }
}